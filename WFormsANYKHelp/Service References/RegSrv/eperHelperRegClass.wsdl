<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://tempuri.org/" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="eperHelperRegClass" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
      <xs:element name="RegisterCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Code" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RegisterCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegisterCodeResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UploadRegBak">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="Code" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="ServerRegXmlZipped" nillable="true" type="xs:base64Binary" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UploadRegBakResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UploadRegBakResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DownloadRegBak">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="Code" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DownloadRegBakResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DownloadRegBakResult" nillable="true" type="xs:base64Binary" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InvalidateCodebyCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="Code" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InvalidateCodebyCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="InvalidateCodebyCodeResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckCodeUsable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="Code" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckCodeUsableResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CheckCodeUsableResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StatusCheck">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StatusCheckResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="StatusCheckResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DumpFullDT">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DumpFullDTResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DumpFullDTResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UploadNewCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="CodeList" nillable="true" type="q1:ArrayOfstring" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UploadNewCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UploadNewCodeResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListRegsInPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="StartDate" type="xs:dateTime" />
            <xs:element minOccurs="0" name="EndDate" type="xs:dateTime" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListRegsInPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ListRegsInPeriodResult" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeletebyId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="IdToDelete" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeletebyIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DeletebyIdResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetOtherState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="IdToChange" type="xs:int" />
            <xs:element minOccurs="0" name="Operation" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetOtherStateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SetOtherStateResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetRegDate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="Token" nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="IdToChange" type="xs:int" />
            <xs:element minOccurs="0" name="WhenRegistered" type="xs:dateTime" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetRegDateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SetRegDateResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="anyType" nillable="true" type="xs:anyType" />
      <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
      <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
      <xs:element name="boolean" nillable="true" type="xs:boolean" />
      <xs:element name="byte" nillable="true" type="xs:byte" />
      <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
      <xs:element name="decimal" nillable="true" type="xs:decimal" />
      <xs:element name="double" nillable="true" type="xs:double" />
      <xs:element name="float" nillable="true" type="xs:float" />
      <xs:element name="int" nillable="true" type="xs:int" />
      <xs:element name="long" nillable="true" type="xs:long" />
      <xs:element name="QName" nillable="true" type="xs:QName" />
      <xs:element name="short" nillable="true" type="xs:short" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
      <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
      <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
      <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
      <xs:element name="char" nillable="true" type="tns:char" />
      <xs:simpleType name="char">
        <xs:restriction base="xs:int" />
      </xs:simpleType>
      <xs:element name="duration" nillable="true" type="tns:duration" />
      <xs:simpleType name="duration">
        <xs:restriction base="xs:duration">
          <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
          <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
          <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="guid" nillable="true" type="tns:guid" />
      <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="FactoryType" type="xs:QName" />
      <xs:attribute name="Id" type="xs:ID" />
      <xs:attribute name="Ref" type="xs:IDREF" />
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="ArrayOfstring">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="eperHelperRegWS_if_RegisterCode_InputMessage">
    <wsdl:part name="parameters" element="tns:RegisterCode" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_RegisterCode_OutputMessage">
    <wsdl:part name="parameters" element="tns:RegisterCodeResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_UploadRegBak_InputMessage">
    <wsdl:part name="parameters" element="tns:UploadRegBak" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_UploadRegBak_OutputMessage">
    <wsdl:part name="parameters" element="tns:UploadRegBakResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_DownloadRegBak_InputMessage">
    <wsdl:part name="parameters" element="tns:DownloadRegBak" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_DownloadRegBak_OutputMessage">
    <wsdl:part name="parameters" element="tns:DownloadRegBakResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_InvalidateCodebyCode_InputMessage">
    <wsdl:part name="parameters" element="tns:InvalidateCodebyCode" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_InvalidateCodebyCode_OutputMessage">
    <wsdl:part name="parameters" element="tns:InvalidateCodebyCodeResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_CheckCodeUsable_InputMessage">
    <wsdl:part name="parameters" element="tns:CheckCodeUsable" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_CheckCodeUsable_OutputMessage">
    <wsdl:part name="parameters" element="tns:CheckCodeUsableResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_StatusCheck_InputMessage">
    <wsdl:part name="parameters" element="tns:StatusCheck" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_StatusCheck_OutputMessage">
    <wsdl:part name="parameters" element="tns:StatusCheckResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_DumpFullDT_InputMessage">
    <wsdl:part name="parameters" element="tns:DumpFullDT" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_DumpFullDT_OutputMessage">
    <wsdl:part name="parameters" element="tns:DumpFullDTResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_UploadNewCode_InputMessage">
    <wsdl:part name="parameters" element="tns:UploadNewCode" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_UploadNewCode_OutputMessage">
    <wsdl:part name="parameters" element="tns:UploadNewCodeResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_ListRegsInPeriod_InputMessage">
    <wsdl:part name="parameters" element="tns:ListRegsInPeriod" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_ListRegsInPeriod_OutputMessage">
    <wsdl:part name="parameters" element="tns:ListRegsInPeriodResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_DeletebyId_InputMessage">
    <wsdl:part name="parameters" element="tns:DeletebyId" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_DeletebyId_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeletebyIdResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_SetOtherState_InputMessage">
    <wsdl:part name="parameters" element="tns:SetOtherState" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_SetOtherState_OutputMessage">
    <wsdl:part name="parameters" element="tns:SetOtherStateResponse" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_SetRegDate_InputMessage">
    <wsdl:part name="parameters" element="tns:SetRegDate" />
  </wsdl:message>
  <wsdl:message name="eperHelperRegWS_if_SetRegDate_OutputMessage">
    <wsdl:part name="parameters" element="tns:SetRegDateResponse" />
  </wsdl:message>
  <wsdl:portType name="eperHelperRegWS_if">
    <wsdl:operation name="RegisterCode">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/RegisterCode" message="tns:eperHelperRegWS_if_RegisterCode_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/RegisterCodeResponse" message="tns:eperHelperRegWS_if_RegisterCode_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="UploadRegBak">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/UploadRegBak" message="tns:eperHelperRegWS_if_UploadRegBak_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/UploadRegBakResponse" message="tns:eperHelperRegWS_if_UploadRegBak_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DownloadRegBak">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/DownloadRegBak" message="tns:eperHelperRegWS_if_DownloadRegBak_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/DownloadRegBakResponse" message="tns:eperHelperRegWS_if_DownloadRegBak_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="InvalidateCodebyCode">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/InvalidateCodebyCode" message="tns:eperHelperRegWS_if_InvalidateCodebyCode_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/InvalidateCodebyCodeResponse" message="tns:eperHelperRegWS_if_InvalidateCodebyCode_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CheckCodeUsable">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/CheckCodeUsable" message="tns:eperHelperRegWS_if_CheckCodeUsable_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/CheckCodeUsableResponse" message="tns:eperHelperRegWS_if_CheckCodeUsable_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="StatusCheck">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/StatusCheck" message="tns:eperHelperRegWS_if_StatusCheck_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/StatusCheckResponse" message="tns:eperHelperRegWS_if_StatusCheck_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DumpFullDT">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/DumpFullDT" message="tns:eperHelperRegWS_if_DumpFullDT_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/DumpFullDTResponse" message="tns:eperHelperRegWS_if_DumpFullDT_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="UploadNewCode">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/UploadNewCode" message="tns:eperHelperRegWS_if_UploadNewCode_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/UploadNewCodeResponse" message="tns:eperHelperRegWS_if_UploadNewCode_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ListRegsInPeriod">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/ListRegsInPeriod" message="tns:eperHelperRegWS_if_ListRegsInPeriod_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/ListRegsInPeriodResponse" message="tns:eperHelperRegWS_if_ListRegsInPeriod_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeletebyId">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/DeletebyId" message="tns:eperHelperRegWS_if_DeletebyId_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/DeletebyIdResponse" message="tns:eperHelperRegWS_if_DeletebyId_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="SetOtherState">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/SetOtherState" message="tns:eperHelperRegWS_if_SetOtherState_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/SetOtherStateResponse" message="tns:eperHelperRegWS_if_SetOtherState_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="SetRegDate">
      <wsdl:input wsaw:Action="http://tempuri.org/eperHelperRegWS_if/SetRegDate" message="tns:eperHelperRegWS_if_SetRegDate_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/eperHelperRegWS_if/SetRegDateResponse" message="tns:eperHelperRegWS_if_SetRegDate_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_eperHelperRegWS_if" type="tns:eperHelperRegWS_if">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="RegisterCode">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/RegisterCode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadRegBak">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/UploadRegBak" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DownloadRegBak">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/DownloadRegBak" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InvalidateCodebyCode">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/InvalidateCodebyCode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckCodeUsable">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/CheckCodeUsable" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatusCheck">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/StatusCheck" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DumpFullDT">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/DumpFullDT" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadNewCode">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/UploadNewCode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListRegsInPeriod">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/ListRegsInPeriod" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeletebyId">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/DeletebyId" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetOtherState">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/SetOtherState" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRegDate">
      <soap:operation soapAction="http://tempuri.org/eperHelperRegWS_if/SetRegDate" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="eperHelperRegClass">
    <wsdl:port name="BasicHttpBinding_eperHelperRegWS_if" binding="tns:BasicHttpBinding_eperHelperRegWS_if">
      <soap:address location="http://registration.homoki.net/eperHelperRegWS.svc" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>